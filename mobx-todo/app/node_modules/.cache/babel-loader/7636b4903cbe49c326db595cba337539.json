{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\n\nclass Store {\n  constructor() {\n    this.title = \"\";\n    this.input = false;\n    this.tasks = [{\n      id: 1,\n      title: \"Задача 1\",\n      done: true\n    }, {\n      id: 2,\n      title: \"Задача 2\",\n      done: false\n    }];\n    this.finallTasksArr = this.tasks;\n    makeAutoObservable(this);\n  }\n\n  findDoneItem() {\n    return this.finallTasksArr = this.tasks.filter(elem => elem.done);\n  }\n\n  InProgressItem() {\n    return this.finallTasksArr = this.tasks.filter(elem => !elem.done);\n  }\n\n  AllArr() {\n    return this.finallTasksArr = this.tasks;\n  }\n\n  deleteItem(id) {\n    this.tasks = this.tasks.filter(elem => elem.id != id);\n    this.finallTasksArr = this.tasks;\n  }\n\n  addItem(item) {\n    this.tasks.push(item);\n    this.finallTasksArr = this.tasks;\n  }\n\n  changeItem(event) {\n    let id = event.target.getAttribute(\"data-id\");\n    this.tasks.forEach(elem => {\n      if (elem.id != id) return false;\n      elem.title = event.target.value;\n    });\n    this.finallTasksArr = this.tasks;\n  }\n\n  changeStateItem(id) {\n    this.tasks.forEach(elem => {\n      if (elem.id != id) return false;\n      elem.done = !elem.done;\n    });\n    this.finallTasksArr = this.tasks;\n  }\n\n  setInput(str) {\n    this.input = str;\n  }\n\n  setTitle(str) {\n    this.title = str;\n  }\n\n}\n\nexport default new Store();","map":{"version":3,"sources":["/Users/artemfurta/Documents/GitHub/afurta.github.io/mobx-todo/app/src/store/index.tsx"],"names":["makeAutoObservable","Store","constructor","title","input","tasks","id","done","finallTasksArr","findDoneItem","filter","elem","InProgressItem","AllArr","deleteItem","addItem","item","push","changeItem","event","target","getAttribute","forEach","value","changeStateItem","setInput","str","setTitle"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAGA,MAAMC,KAAN,CAAY;AASVC,EAAAA,WAAW,GAAG;AAAA,SARdC,KAQc,GARE,EAQF;AAAA,SAPdC,KAOc,GAPG,KAOH;AAAA,SANdC,KAMc,GANC,CACb;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASH,MAAAA,KAAK,EAAE,UAAhB;AAA4BI,MAAAA,IAAI,EAAE;AAAlC,KADa,EAEb;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASH,MAAAA,KAAK,EAAE,UAAhB;AAA4BI,MAAAA,IAAI,EAAE;AAAlC,KAFa,CAMD;AAAA,SAFdC,cAEc,GAFU,KAAKH,KAEf;AACZL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AAEDS,EAAAA,YAAY,GAAG;AACb,WAAQ,KAAKD,cAAL,GAAsB,KAAKH,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACJ,IAA/B,CAA9B;AACD;;AACDK,EAAAA,cAAc,GAAG;AACf,WAAQ,KAAKJ,cAAL,GAAsB,KAAKH,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAAI,CAACA,IAAI,CAACJ,IAAhC,CAA9B;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,WAAQ,KAAKL,cAAL,GAAsB,KAAKH,KAAnC;AACD;;AACDS,EAAAA,UAAU,CAACR,EAAD,EAAa;AACrB,SAAKD,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACL,EAAL,IAAWA,EAArC,CAAb;AACA,SAAKE,cAAL,GAAsB,KAAKH,KAA3B;AACD;;AACDU,EAAAA,OAAO,CAACC,IAAD,EAAe;AACpB,SAAKX,KAAL,CAAWY,IAAX,CAAgBD,IAAhB;AACA,SAAKR,cAAL,GAAsB,KAAKH,KAA3B;AACD;;AACDa,EAAAA,UAAU,CAACC,KAAD,EAA6C;AACrD,QAAIb,EAAE,GAAGa,KAAK,CAACC,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAT;AACA,SAAKhB,KAAL,CAAWiB,OAAX,CAAmBX,IAAI,IAAI;AACzB,UAAIA,IAAI,CAACL,EAAL,IAAWA,EAAf,EAAmB,OAAO,KAAP;AACnBK,MAAAA,IAAI,CAACR,KAAL,GAAagB,KAAK,CAACC,MAAN,CAAaG,KAA1B;AACD,KAHD;AAIA,SAAKf,cAAL,GAAsB,KAAKH,KAA3B;AACD;;AACDmB,EAAAA,eAAe,CAAClB,EAAD,EAAa;AAC1B,SAAKD,KAAL,CAAWiB,OAAX,CAAmBX,IAAI,IAAI;AACzB,UAAIA,IAAI,CAACL,EAAL,IAAWA,EAAf,EAAmB,OAAO,KAAP;AACnBK,MAAAA,IAAI,CAACJ,IAAL,GAAY,CAACI,IAAI,CAACJ,IAAlB;AACD,KAHD;AAIA,SAAKC,cAAL,GAAsB,KAAKH,KAA3B;AACD;;AAEDoB,EAAAA,QAAQ,CAACC,GAAD,EAAe;AACrB,SAAKtB,KAAL,GAAasB,GAAb;AACD;;AACDC,EAAAA,QAAQ,CAACD,GAAD,EAAc;AACpB,SAAKvB,KAAL,GAAauB,GAAb;AACD;;AAnDS;;AAqDZ,eAAe,IAAIzB,KAAJ,EAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport React from \"react\";\n\nclass Store {\n  title: string = \"\";\n  input: boolean = false;\n  tasks: any[] = [\n    { id: 1, title: \"Задача 1\", done: true },\n    { id: 2, title: \"Задача 2\", done: false },\n  ];\n  finallTasksArr: any[] = this.tasks;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  findDoneItem() {\n    return (this.finallTasksArr = this.tasks.filter(elem => elem.done));\n  }\n  InProgressItem() {\n    return (this.finallTasksArr = this.tasks.filter(elem => !elem.done));\n  }\n  AllArr() {\n    return (this.finallTasksArr = this.tasks);\n  }\n  deleteItem(id: number) {\n    this.tasks = this.tasks.filter(elem => elem.id != id);\n    this.finallTasksArr = this.tasks;\n  }\n  addItem(item: string) {\n    this.tasks.push(item);\n    this.finallTasksArr = this.tasks;\n  }\n  changeItem(event: React.ChangeEvent<HTMLInputElement>) {\n    let id = event.target.getAttribute(\"data-id\");\n    this.tasks.forEach(elem => {\n      if (elem.id != id) return false;\n      elem.title = event.target.value;\n    });\n    this.finallTasksArr = this.tasks;\n  }\n  changeStateItem(id: number) {\n    this.tasks.forEach(elem => {\n      if (elem.id != id) return false;\n      elem.done = !elem.done;\n    });\n    this.finallTasksArr = this.tasks;\n  }\n\n  setInput(str: boolean) {\n    this.input = str;\n  }\n  setTitle(str: string) {\n    this.title = str;\n  }\n}\nexport default new Store();\n"]},"metadata":{},"sourceType":"module"}